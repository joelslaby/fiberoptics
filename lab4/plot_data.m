clearvars; close all; clc;

save = 0;

% Q = load('lab4_Q_nofiber_nomod.mat').Q_factor;
% Q_m = load('lab4_Q_nofiber_mod.mat').Q_factor;
% Q_m_f = load('lab4_Q_fiber_mod.mat').Q_factor;
% 
% BER = load('lab4_BER_nofiber_nomod.mat').BER;
% BER_m = load('lab4_BER_nofiber_mod.mat').BER;
% BER_m_f = load('lab4_BER_fiber_mod.mat').BER;
% 
% freq = [4, 3, 2];
% 
% Q = reshape(Q, [3, 3]);
% Q_m = reshape(Q_m, [3, 3]);
% Q_m_f = reshape(Q_m_f, [3, 3]);
% 
% BER = reshape(BER, [3, 3]);
% BER_m = reshape(BER_m, [3, 3]);
% BER_m_f = reshape(BER_m_f, [3, 3]);
% 
% h = figure();
% set(h,'WindowStyle','docked');
% 
% C = {[0, 0.4470, 0.7410], [0.8500, 0.3250, 0.0980], [0.9290, 0.6940, 0.1250]};
% for i = 1:3
%     plot(freq, Q_m(:, i), '-o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
%     plot(freq, Q(:, i), '--o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
% end
% set ( gca, 'xdir', 'reverse' );
% xlim([1.8, 4.2]);
% xticks([2, 3, 4]);
% ylim([1, 18]);
% title("Q factor for varying Signal Frequencies and Scope Bandwidths")
% xlabel("Scope Bandwidth [GHz] (Decreasing)");
% ylabel("Q-factor");
% legend("2 GHz Signal w/ Mod", ...
%     "2 GHz Signal w/ no Mod", ...
%     "3 GHz Signal w/ Mod", ...
%     "3 GHz Signal w/ no Mod", ...
%     "4 GHz Signal w/ Mod", ...
%     "4 GHz Signal w/ no Mod");
% if(save)
%     print -depsc q_mod_compare
% end
% 
% 
% h = figure();
% set(h,'WindowStyle','docked');
% 
% C = {[0, 0.4470, 0.7410], [0.8500, 0.3250, 0.0980], [0.9290, 0.6940, 0.1250]};
% for i = 1:3
%     semilogy(freq, BER_m(:, i), '-o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
%     semilogy(freq, BER(:, i), '--o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
% end
% set ( gca, 'xdir', 'reverse' );
% xlim([1.8, 4.2]);
% xticks([2, 3, 4]);
% % ylim([1, 18]);
% title("BER for varying Signal Frequencies and Scope Bandwidths")
% xlabel("Scope Bandwidth [GHz] (Decreasing)");
% ylabel("BER");
% legend("2 GHz Signal w/ Mod", ...
%     "2 GHz Signal w/ no Mod", ...
%     "3 GHz Signal w/ Mod", ...
%     "3 GHz Signal w/ no Mod", ...
%     "4 GHz Signal w/ Mod", ...
%     "4 GHz Signal w/ no Mod",...
%     'Location', 'Southeast');
% 
% if(save)
%     print -depsc ber_mod_compare
% end
% 
% h = figure();
% set(h,'WindowStyle','docked');
% 
% for i = 1:3
%     semilogy(freq, BER_m(:, i), '-o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
%     semilogy(freq, BER(:, i), '--o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
% end
% set ( gca, 'xdir', 'reverse' );
% xlim([1.8, 4.2]);
% xticks([2, 3, 4]);
% ylim([1e-30, 1]);
% title("BER for varying Signal Frequencies and Scope Bandwidths")
% xlabel("Scope Bandwidth [GHz] (Decreasing)");
% ylabel("BER");
% legend("2 GHz Signal w/ Mod", ...
%     "2 GHz Signal w/ no Mod", ...
%     "3 GHz Signal w/ Mod", ...
%     "3 GHz Signal w/ no Mod", ...
%     "4 GHz Signal w/ Mod", ...
%     "4 GHz Signal w/ no Mod",...
%     'Location', 'South');
% 
% if(save)
%     print -depsc ber_mod_compare_zoom
% end
% 
% h = figure();
% set(h,'WindowStyle','docked');
% 
% freq = [2, 3, 4];
% 
% for i = 1:3
%     plot(freq, Q_m(i, :), '-o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
%     plot(freq, Q(i, :), '--o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
% end
% % set ( gca, 'xdir', 'reverse' );
% xlim([1.8, 4.2]);
% xticks([2, 3, 4]);
% ylim([1, 18]);
% title({"Q factor vs. Signal Frequencies at varying", "Scope Bandwidths and Signal Modulation"})
% xlabel("Signal Frequency [GHz]");
% ylabel("Q Factor");
% legend("4 GHz BW w/ Mod", ...
%     "4 GHz BW w/ no Mod", ...
%     "3 GHz BW w/ Mod", ...
%     "3 GHz BW w/ no Mod", ...
%     "2 GHz BW w/ Mod", ...
%     "2 GHz BW w/ no Mod");
% 
% if(save)
%     print -depsc q_mod_compare_SIGFreq
% end
% 
% h = figure();
% set(h,'WindowStyle','docked');
% 
% freq = [2, 3, 4];
% 
% for i = 1:3
%     semilogy(freq, BER_m(i, :), '-o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
%     semilogy(freq, BER(i, :), '--o', ...
%         'Linewidth', 1.5, ...
%         'color', C{i}, ...
%         'MarkerEdgeColor', C{i},...
%         'MarkerFaceColor', C{i}, ...
%         'MarkerSize', 4); hold on;
% end
% % set ( gca, 'xdir', 'reverse' );
% xlim([1.8, 4.2]);
% xticks([2, 3, 4]);
% % ylim([1, 18]);
% title({"BER vs. Signal Frequencies at varying", "Scope Bandwidths and Signal Modulation"})
% xlabel("Signal Frequency [GHz]");
% ylabel("BER");
% legend("4 GHz BW w/ Mod", ...
%     "4 GHz BW w/ no Mod", ...
%     "3 GHz BW w/ Mod", ...
%     "3 GHz BW w/ no Mod", ...
%     "2 GHz BW w/ Mod", ...
%     "2 GHz BW w/ no Mod", ...
%     'Location', 'Southeast');
% 
% if(save)
%     print -depsc ber_mod_compare_SIGFreq
% end
% 
% h = figure();
% set(h,'WindowStyle','docked');
% 
% fiber_L = [0, 3, 6, 9];
% a=1;
% for i = 1:3
%     if(i ~= 3)
%         plot(fiber_L, [Q_m(a, 1), Q_m_f(i, :)], '-o', ...
%             'Linewidth', 1.5, ...
%             'color', C{i}, ...
%             'MarkerEdgeColor', C{i},...
%             'MarkerFaceColor', C{i}, ...
%             'MarkerSize', 4); hold on;
%         a = a+2;
%     else
%         plot(fiber_L(2:end), Q_m_f(i, :), '-o', ...
%             'Linewidth', 1.5, ...
%             'color', C{i}, ...
%             'MarkerEdgeColor', C{i},...
%             'MarkerFaceColor', C{i}, ...
%             'MarkerSize', 4); hold on;
%     end
% end
% xlim([-1, 10]);
% xticks([0, 3, 6, 9]);
% title("Q factor vs. Fiber Length")
% xlabel("Fiber Length [km]");
% ylabel("Q Factor");
% legend("4 GHz BW", ...
%     "2 GHz BW", ...
%     "1 GHz BW", ...
%     'Location', 'East');
% 
% if(save)
%     print -depsc q_fiberL
% end
% 
% h = figure();
% set(h,'WindowStyle','docked');
% 
% fiber_L = [0, 3, 6, 9];
% a=1;
% for i = 1:3
%     if(i ~= 3)
%         semilogy(fiber_L, [BER_m(a, 1), BER_m_f(i, :)], '-o', ...
%             'Linewidth', 1.5, ...
%             'color', C{i}, ...
%             'MarkerEdgeColor', C{i},...
%             'MarkerFaceColor', C{i}, ...
%             'MarkerSize', 4); hold on;
%         a = a+2;
%     else
%         semilogy(fiber_L(2:end), BER_m_f(i, :), '-o', ...
%             'Linewidth', 1.5, ...
%             'color', C{i}, ...
%             'MarkerEdgeColor', C{i},...
%             'MarkerFaceColor', C{i}, ...
%             'MarkerSize', 4); hold on;
%     end
% end
% xlim([-1, 10]);
% xticks([0, 3, 6, 9]);
% title("BER vs. Fiber Length")
% xlabel("Fiber Length [km]");
% ylabel("BER");
% legend("4 GHz BW", ...
%     "2 GHz BW", ...
%     "1 GHz BW", ...
%     'Location', 'East');
% 
% if(save)
%     print -depsc BER_fiberL
% end

h = figure();
set(h,'WindowStyle','docked');

fiberL = [0, 3, 6, 9];
PoutdB = [-5.1, -6.82, -7.22, -8.30]; % dBm

k = 1.380649e-23;
q = 1.60217e-19;
T = 300;
RL = 50;
delF = 12.5e9;
R = 0.59;

Pout = 10.^(PoutdB./10) * 1e-3;
NF = 3;
Fn = 10^(NF/10);

SNR = (R.*Pout).^2 ./ (4 * k * T / RL * delF * Fn);

plot(fiberL, 10*log10(SNR), '-o', ...
            'Linewidth', 1.5, ...
            'color', [0, 0.4470, 0.7410], ...
            'MarkerEdgeColor', [0, 0.4470, 0.7410],...
            'MarkerFaceColor', [0, 0.4470, 0.7410], ...
            'MarkerSize', 4); hold on;
title("SNR vs. Fiber Length for 4 GHz BW");
xlabel("Fiber Length [km]");
ylabel("SNR [dB]");
xlim([-1, 10]);
% ylim([34, 42]);
xticks([0, 3, 6, 9]);

%
% k = 1.380649e-23;
% q = 1.60217e-19;
% T = 300;
% RL = 50;
% delF = 12.5e9;
% R = 0.59;
% 
% Pout = 10.^(PoutdB./10) * 1e-3;
% NF = 3;
% Fn = 10^(NF/10);
% 
% SNR = (R.*Pout).^2 ./ (4 * k * T / RL * delF * Fn);
% 
% Q = 2;
% SNR = 2*Q^2;
% Pout = sqrt(SNR * (4 * k * T / RL * delF * Fn)) /  R
% 
% PdB = 10*log10(Pout/1e-3)
% 
% if(save)
%     print -depsc SNR_fiberL
% end
% 
% rex = 10^(-3/10)
% % rex = 0;
% Psens = Q/R * ((1+rex)/(1-rex)) * (sqrt(4*k*T*Fn*delF / RL))
% 
% PdB = 10*log10(Psens/1e-3)
